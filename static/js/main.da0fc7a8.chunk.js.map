{"version":3,"sources":["images/logoParkSite.jpeg","components/avatar/Avatar.jsx","components/Messages/Messages.jsx","components/login/loginForm/LoginForm.jsx","components/procedures/procedureSearch/ProcedureSearch.jsx","components/procedures/procedureList/ProcedureList.jsx","components/procedures/procedureItem/ProcedureItem.jsx","components/loading/Loading.jsx","components/dashboard/sidebar/SideBar.jsx","components/proceduresDetails/detailProcedureItem/DetailProcedureItem.jsx","components/proceduresDetails/detailProcedureList/DetailProcedureList.jsx","components/dashboard/content/Content.jsx","components/dashboard/main/Dashboard.jsx","components/OTP/OTPGenerator/OTPInputGenerator.jsx","components/OTP/main/OTP.jsx","components/login/loginOTP/LoginOTP.jsx","components/login/main/Login.jsx","App.js","index.js"],"names":["Avatar","width","height","logged","avatarUser","url","require","default","alt","useState","userAvatar","setUserAvatar","useEffect","a","JSON","parse","localStorage","getItem","userInfo","console","group","log","groupEnd","name","getDataUser","className","src","Messages","message","clasName","type","position","text","LoginForm","validateUser","setMessage","disable","setDisable","email","setUserInfo","onSubmit","e","preventDefault","htmlFor","icon","faEnvelope","placeholder","onChange","target","value","disabled","ProcedureSearch","searchValue","setSearchValue","faSearch","ProcedureList","children","ProcedureItem","data","getDetails","elementID","useRef","id","status","toLowerCase","replace","onClick","procedureID","current","attributes","getNamedItem","Number","ref","faBookmark","faHandshake","applicationDate","lastUpdate","faClock","Loading","SideBar","disconect","procedureList","clientId","procedures","setProcedures","loadSidebar","setLoadSidebar","setTimeout","filter","procedure","procedureUserLIst","length","searchedProcedures","getLowerDataText","normalize","lowerSearchText","includes","map","DetailProcedureItem","index","description","dateCreated","faUser","user","DetailProcedureList","Content","proceduresDetails","clientID","detailList","setDetailList","loading","setLoading","details","procedureDetailLIst","sort","b","detail","number","Dashboard","seeDetails","setSeeDetails","showHideMessage","document","querySelector","classList","contains","remove","add","OTPInputGenerator","qty","validateChange","OTPKey","inputOTP","arrInputs","push","readOnly","OTP","validationStatus","characters","setOTPKey","setDisabled","countAttempts","setCountAttempts","focus","faLock","OTPValue","authEncrypt","CryptoJS","bytes","AES","decrypt","toString","decryptedData","enc","Utf8","setItem","LoginOTP","setLogged","title","setTitle","saveInfoUser","stringify","window","location","reload","Login","users","image","genere","authCode","userExist","setUserExist","generateForm","emojiType","form","createElement","setAttribute","appName","emoji","appendChild","emailjs","sendForm","then","result","error","Math","floor","pow","random","encrypt","App","setUser","clear","logout","removeItem","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.da0fc7a8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logoParkSite.384a134a.jpeg\";","import React, { Fragment, useState, useEffect } from 'react'\n\n//CSS Import\nimport \"./avatar.css\"\n\nfunction Avatar({width, height, logged}) {\n\n  let avatarUser = {\n    url:require(\"../../images/logoParkSite.jpeg\").default,\n    alt:\"Consultango®\"\n  }\n\n  const [userAvatar, setUserAvatar] = useState(avatarUser)\n\n  useEffect(()=>{\n    let isSubscribed = true\n    const getDataUser = async ()=>{\n      const userInfo = await JSON.parse(localStorage.getItem(\"userInfo\"))\n      console.group(\"Info de AVATAR\")\n      console.log(\"valor de logged\",logged);\n      console.log(\"valor de userInfo\",userInfo);\n      console.log(\"estoy en getDataUser de Avatar\");\n      console.groupEnd()\n\n      if(logged){\n        setUserAvatar({\n          url: `https://ui-avatars.com/api/?name=${userInfo.name}`,\n          alt: userInfo.name\n        })\n\n      }else{\n        setUserAvatar(avatarUser)\n        console.log(\"ingresó\");\n      }\n    }\n\n    getDataUser()\n    return () => (isSubscribed = false)\n  },[logged])\n\n\n  return (\n    <div className=\"wrapper__avatar\">\n      <img className=\"wrapper__avatar--image\" src={userAvatar.url} alt={userAvatar.alt} width={ width } height={ height }/>\n    </div>\n  )\n}\n\nexport { Avatar }\n","import React,{ Fragment } from 'react'\n\nfunction Messages({ message }) {\n\n  let clasName = \"notify\";\n\n  clasName+=` notify--${message.type}`\n  clasName+=` notify--position-${message.position}`\n\n\n  return (\n    <Fragment>\n      {\n        (message.text !== \"\") ?\n        <div className={ clasName }>\n          {message.text}\n        </div>\n       : \"\"\n      }\n    </Fragment>\n  )\n}\n\nexport { Messages }\n","import React, { Fragment, useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\n\n//CSS Import\nimport \"./loginForm.css\"\n\nfunction LoginForm({validateUser, setMessage, disable, setDisable}) {\n\n  const [userInfo, setUserInfo] = useState({email: \" \"})\n  // const [error, setError] = useState(\" \")\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if(userInfo.email === \" \"){\n      setMessage({\n        text: \"El campo Email es obligatorio!\",\n        type: \"error\",\n        position: \"left\"\n      })\n      setDisable(false)\n    }else{\n      validateUser(userInfo)\n      console.log(\"Se envió!!!!\");\n    }\n  }\n\n  const handlerChange = (e)=>{\n    setUserInfo({...userInfo, email: e.target.value})\n  }\n\n  return (\n    <div>\n      <form onSubmit= { submitHandler }>\n        <div className=\"form__group--item\">\n          <label htmlFor=\"\">\n            <FontAwesomeIcon icon={faEnvelope}/>\n          </label>\n          {/* <input type=\"email\" placeholder=\"Email\" name=\"email\" onChange={e => setUserInfo({...userInfo, email: e.target.value})} value={userInfo.email}/> */}\n          <input type=\"email\" placeholder=\"Email\" name=\"email\" onChange={ handlerChange } value={userInfo.email}/>\n        </div>\n        <button className=\"button--primary\" type=\"submit\" disabled={ disable }>Continuar</button>\n      </form>\n    </div>\n  )\n}\n\nexport { LoginForm }\n","import React, {Fragment, useState } from 'react'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n//CSS Import\nimport \"./procedureSearch.css\"\n\nfunction ProcedureSearch({ searchValue, setSearchValue }) {\n\n  const proceduresChangeHandler = (e)=>{\n    setSearchValue(e.target.value)\n    console.log(\"valor buscado\",e.target.value);\n  }\n\n  return (\n      <Fragment>\n          {/* <Avatar width=\"70px\" height=\"70px\"/> */}\n          <div className=\"wrapper__procedure--search\">\n            <input className=\"wrapper__procedure--search-input\" type=\"text\" onChange={ proceduresChangeHandler } value={searchValue} placeholder=\"Buscar trámite\"/>\n            <label>\n              <FontAwesomeIcon icon={ faSearch } />\n            </label>\n          </div>\n        {/* <button className=\"button--primary\" onClick={ disconect }>Logout</button> */}\n      </Fragment>\n  )\n}\n\nexport { ProcedureSearch }\n","import React, { Fragment } from 'react'\n\n//CSS Import\nimport './procedureList.css'\n\nfunction ProcedureList({ children }) {\n  return (\n    <ul className=\"wrapper__procedure--list\">\n      { children }\n    </ul>\n  )\n}\n\nexport { ProcedureList }\n","import React, { Fragment, useState, useRef } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCreditCard, faHome, faCar, faBookmark, faClock, faHandshake } from '@fortawesome/free-solid-svg-icons';\n\n//CSS Import\nimport \"./procedureItem.css\"\n\nfunction ProcedureItem({ data, getDetails }) {\n\n  const elementID = useRef(data.id);\n\n  let className = \"wrapper__procedure--card-status\";\n\n  //Eliminar espacios del estado para concatenar el estado a la clase\n  let status = data.status.toLowerCase().replace(/\\s+/g, '');\n  switch (status) {\n    case \"finalizado\":\n      className += \" done\"\n      break;\n    case \"enprogreso\":\n      className += \" progress\"\n      break;\n      default:\n      className += \" error\"\n      break;\n  }\n\n  const handlerClick = (e)=>{\n    let procedureID = elementID.current.attributes.getNamedItem(\"data-id\").value\n\n    console.log(\"Valor de procedureID\",procedureID);\n    getDetails(Number(procedureID)) //Elevar el estado enviando el id del trámite\n\n  }\n\n  return (\n    <Fragment >\n      <li onClick={ handlerClick } className=\"wrapper__procedure--card\" ref={ elementID } data-id={data.id} >\n        <div>\n          <div className=\"wrapper__procedure--card-top\">\n            <span className=\"wrapper__procedure--card-icon\">\n              {/* <FontAwesomeIcon icon={`${data.icon}`} /> */}\n              <FontAwesomeIcon icon={faBookmark} />\n            </span>\n            {/* <span>{data.icon}</span> */}\n            <h3>{data.name}</h3>\n          </div>\n          <div className=\"wrapper__procedure--card-bottom\">\n            <div className=\"wrapper__procedure--card-date\">\n              <span>\n                <FontAwesomeIcon icon={faHandshake} />\n              </span>\n              <p>{data.applicationDate}</p>\n            </div>\n            {data.lastUpdate !=\" \" && //Se muestra solo si hay actualización\n              <div className=\"wrapper__procedure--card-date\">\n                <span>\n                  <FontAwesomeIcon icon={faClock} />\n                </span>\n                <p>{data.lastUpdate}</p>\n              </div>\n            }\n          </div>\n          <p className={ className }>{data.status}</p>\n        </div>\n      </li>\n    </Fragment>\n  )\n}\n\nexport { ProcedureItem }\n","import React, { Fragment } from 'react'\n\n//CSS Import\nimport \"./loading.css\"\n\nfunction Loading() {\n  return (\n    <Fragment>\n      <div className=\"wrapper__spinner\">\n        <div className=\"spinner\"></div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport { Loading }\n","import React, { Fragment, useState, useEffect } from 'react'\n\n//Components import\nimport { ProcedureSearch } from '../../procedures/procedureSearch/ProcedureSearch'\nimport { ProcedureList } from '../../procedures/procedureList/ProcedureList'\nimport { ProcedureItem } from '../../procedures/procedureItem/ProcedureItem'\nimport { Avatar } from '../../avatar/Avatar'\n\n//CSS Import\nimport './sidebar.css'\nimport { Loading } from '../../loading/Loading'\n\nfunction SideBar({ logged, disconect, userInfo, getDetails, setMessage }) {\n\n  const procedureList = [\n    {id:1, clientId: 1, name:\"Compra de Vivienda\", status:\"En progreso\", icon:\"faHome\", applicationDate: \"2021-01-22 10:00\", lastUpdate: \"2021-04-10 14:00\"},\n    {id:2, clientId: 1, name:\"Crédito Leasing Vehículo\", status:\"Finalizado\", icon:\"faCar\", applicationDate: \"2020-01-22 10:00\", lastUpdate: \"2020-07-10 08:00\"},\n    {id:3, clientId: 1, name:\"Tarjeta de Crédito\", status:\"Finalizado\", icon:\"faCreditCard\", applicationDate: \"2006-09-27 15:00\", lastUpdate: \"2021-04-10 10:00\"},\n    {id:4, clientId: 2, name:\"Préstamo personal\", status:\"En progreso\", icon:\"faCar\", applicationDate: \"2021-01-22 10:00\", lastUpdate: \"2021-04-10 10:00\"},\n    {id:5, clientId: 2, name:\"Tarjeta de Crédito\", status:\"En progreso\", icon:\"faCreditCard\", applicationDate: \"2021-01-22 10:00\", lastUpdate: \"2021-04-10 10:00\"},\n    {id:6, clientId: 1, name:\"Compra de Vivienda\", status:\"En progreso\", icon:\"faHome\", applicationDate: \"2021-01-22 10:00\", lastUpdate: \"2021-04-10 10:00\"},\n    {id:7, clientId: 2, name:\"Compra de Vivienda\", status:\"En progreso\", icon:\"faHome\", applicationDate: \"2021-01-22 10:00\", lastUpdate: \"2021-04-10 10:00\"},\n    {id:1, clientId: 3, name:\"Compra de Vivienda\", status:\"En progreso\", icon:\"faHome\", applicationDate: \"2021-01-22 10:00\", lastUpdate: \"2021-04-10 14:00\"},\n    {id:2, clientId: 3, name:\"Crédito Leasing Vehículo\", status:\"Finalizado\", icon:\"faCar\", applicationDate: \"2020-01-22 10:00\", lastUpdate: \"2020-07-10 08:00\"},\n    {id:3, clientId: 3, name:\"Tarjeta de Crédito\", status:\"Finalizado\", icon:\"faCreditCard\", applicationDate: \"2006-09-27 15:00\", lastUpdate: \"2021-04-10 10:00\"},\n  ]\n\n  //Se almacena la información del trámite del cliente traida del server\n  const [procedures, setProcedures] = useState([])\n\n  //Se almacena la información buscada por el usuario\n  const [searchValue, setSearchValue] = useState('')\n\n  const [loadSidebar, setLoadSidebar] = useState(true)\n\n\n  useEffect(() => {\n    //Se asigna el ID del cliente para filtrarlo dentro de la información a consultar\n    setTimeout(async() => {\n      const procedureUserLIst = await procedureList.filter(procedure => procedure.clientId === userInfo.id);\n      setProcedures(procedureUserLIst)\n      setLoadSidebar(false)\n      if(procedureUserLIst.length === 0){\n        setMessage({\n          text: \"No hay información para mostrar...! 😭\",\n          type: \"error\",\n          position: \"left\"\n        });\n      }\n    }, 1000);\n    console.log(\"Nuevo efecto!\");\n  },[userInfo.id])\n\n\n  //Obtener data según el ID del cliente\n  /* const getProcedures = (clientId)=>{\n    //Simular espera de llamada al server por la información del cliente\n    setTimeout(async() => {\n      const procedureUserLIst = await procedureList.filter(procedure => procedure.clientId === clientId);\n      console.log(\"valor de procedureUserLIst\",procedureUserLIst);\n      setProcedures(procedureUserLIst)\n    }, 1000);\n  } */\n\n  /*Se filtra la información según la búsqueda del usuario, eliminando tildes\n  y caracteres especiales para realizar una comparación correcta*/\n  let searchedProcedures = procedures.filter(procedure=>{\n    const getLowerDataText = procedure.name.toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\n    const lowerSearchText = searchValue.toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n    return getLowerDataText.includes(lowerSearchText)\n  });\n\n  return (\n      <Fragment>\n        <div className=\"wrapper__dashboard--sidebar\">\n            <header className=\"wrapper__dashboard--sidebar-header\">\n              <Avatar width=\"70px\" height=\"70px\" logged = { logged }/>\n              <ProcedureSearch searchValue={ searchValue } setSearchValue = { setSearchValue } />\n              <button className=\"button--primary\" onClick={ disconect }>Logout</button>\n            </header>\n            {\n              (loadSidebar)\n              ? <Loading />\n              :\n              <ProcedureList>\n                {\n                    searchedProcedures.map(procedure=>(\n                      <ProcedureItem key={ procedure.id } data={ procedure } getDetails={ getDetails }/>\n                    ))\n                }\n              </ProcedureList>\n            }\n        </div>\n      </Fragment>\n  )\n}\n\nexport { SideBar }\n","import React, { Fragment } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faClock, faUser } from '@fortawesome/free-solid-svg-icons'\n\n//CSS Import\nimport './detailProcedureItem.css'\n\nfunction DetailProcedureItem({ data , index }) {\n\n  let className = \"wrapper__procedure__detail--item\"\n  if(index % 2){\n    className+=\" pair\"\n  }else{\n    className+=\" odd\"\n  }\n  // {id: 5, procedureID: 3, decription: \"No es posible dar el monto solicitado\", dateCreated: \"2006-09-27 16:30\", user: \"jpulido\"},\n\n  return (\n    <Fragment>\n      <li className={ className }>\n        <div>\n          <h4>ID: { data.id }</h4>\n          <span className=\"wrapper__procedure__detail--item-number\">{index}</span>\n          <p className=\"wrapper__procedure__detail--item-title\">{data.description}</p>\n          <div className=\"wrapper__procedure__detail--item-date\">\n            <span>\n              <FontAwesomeIcon icon={faClock} />\n            </span>\n            <p>{data.dateCreated}</p>\n          </div>\n          <div className=\"wrapper__procedure__detail--item-date\">\n            <span>\n              <FontAwesomeIcon icon={faUser} />\n            </span>\n            <p>{data.user}</p>\n          </div>\n          <span className=\"wrapper__procedure__detail--item-scuare\" ></span>\n        </div>\n      </li>\n    </Fragment>\n  )\n}\n\nexport { DetailProcedureItem }\n","import React, { Fragment } from 'react'\n\n//CSS Import\nimport './detailProcedureList.css'\n\nfunction DetailProcedureList( { children }) {\n  return (\n    <Fragment>\n      <ul className=\"wrapper__procedure__detail\">\n        {children}\n      </ul>\n    </Fragment>\n  )\n}\n\nexport { DetailProcedureList }\n","import React, { Fragment, useState, useEffect } from 'react'\nimport { Loading } from '../../loading/Loading'\nimport { Messages } from '../../Messages/Messages'\n\n//Components Import\nimport { DetailProcedureItem } from '../../proceduresDetails/detailProcedureItem/DetailProcedureItem'\nimport { DetailProcedureList } from '../../proceduresDetails/detailProcedureList/DetailProcedureList'\n\n//CSS Import\nimport './content.css'\n\n function Content({ procedureID, setMessage}) {\n\n  const proceduresDetails = [\n    {id: 1, clientID: 1,procedureID: 1, description: \"Se inicia estudio de crédito\", dateCreated: \"2021-01-22 10:00\", user: \"ataborda\"},\n    {id: 2, clientID: 1, procedureID: 1, description: \"La documentación enviada por el ciente es correcta y por eso realizaremos el siguiente paso que es muy importante\", dateCreated: \"2021-01-22 10:00\", user: \"mperez\"},\n    {id: 3, clientID: 1, procedureID: 2, description: \"El cliente solicita financiación del 50% del valor del vehículo El cliente solicita financiación del 50% del valor del vehículoEl cliente solicita financiación del 50% del valor del vehículoEl cliente solicita financiación del 50% del valor del vehículoEl cliente solicita financiación del 50% del valor del vehículoEl cliente solicita financiación del 50% del valor del vehículoEl cliente solicita financiación del 50% del valor del vehículoEl cliente solicita financiación del 50% del valor del vehículoEl cliente solicita financiación del 50% del valor del vehículoEl cliente solicita financiación del 50% del valor del vehículoEl cliente solicita financiación del 50% del valor del vehículo\", dateCreated: \"2021-01-22 10:00\", user: \"gcardona\"},\n    {id: 4, clientID: 1, procedureID: 3, description: \"Se inicia estudio de crédito para validación de TDC\", dateCreated: \"2006-09-27 15:00\", user: \"pholguin\"},\n    {id: 5, clientID: 1, procedureID: 3, description: \"No es posible dar el monto solicitado\", dateCreated: \"2006-09-27 16:30\", user: \"jpulido\"},\n    {id: 6, clientID: 1, procedureID: 2, description: \"Se autoriza el valor del monto solicitado por el cliente\", dateCreated: \"2021-01-22 14:00\", user: \"ataborda\"},\n    {id: 7, clientID: 1, procedureID: 1, description: \"Se pasa a firma de escritura\", dateCreated: \"2021-01-22 10:00\", user: \"potalora\"},\n    {id: 8, clientID: 1, procedureID: 2, description: \"No es posible realizar el desembolso por bloqueo de cuenta\", dateCreated: \"2021-02-08 08:15\", user: \"hmartinez\"},\n    {id: 9, clientID: 1, procedureID: 3, description: \"Validación en centrales aprobada\", dateCreated: \"2006-09-27 15:10\", user: \"jpulido\"},\n    {id: 10, clientID: 2, procedureID: 4, description: \"Se realiza desembolso a la cuenta del cliente\", dateCreated: \"2021-02-08 15:00\", user: \"hmartinez\"},\n    {id: 11, clientID: 2, procedureID: 5, description: \"Se realiza desembolso a la cuenta del cliente\", dateCreated: \"2021-02-08 15:00\", user: \"hmartinez\"},\n    {id: 12, clientID: 2, procedureID: 4, description: \"Se realiza desembolso a la cuenta del cliente\", dateCreated: \"2021-02-08 15:00\", user: \"hmartinez\"},\n    {id: 13, clientID: 2, procedureID: 5, description: \"Se realiza desembolso a la cuenta del cliente\", dateCreated: \"2021-02-08 15:00\", user: \"hmartinez\"},\n  ]\n\n  const [detailList, setDetailList] = useState([])\n  const [loading , setLoading] = useState(false)\n\n  useEffect(() => {\n      setLoading(true)\n      setMessage({});\n      //Simular espera de llamada al server por la información del cliente\n      setTimeout(async() => {\n        const procedureDetailLIst = await proceduresDetails.filter(details => details.procedureID === procedureID);\n        console.log(\"valor de procedureDetailLIst\",procedureDetailLIst);\n        procedureDetailLIst.sort((a,b)=>b.id - a.id) //Ordenar los detalles según el ID\n        setDetailList(procedureDetailLIst)\n        setLoading(false)\n        if(procedureDetailLIst.length === 0){\n          setMessage({\n            text: \"No hay información para mostrar...! 😭\",\n            type: \"error\",\n            position: \"right\"\n          });\n        }\n      }, 1500);\n  },[procedureID]);\n\n\n   return (\n     <Fragment>\n      <div className=\"wrapper__dashboard--content\">\n        {\n          (loading)\n          ? <Loading />\n          :\n          <DetailProcedureList>\n            {\n              detailList.map((detail, index)=>{\n                let number = detailList.length - index\n                return <DetailProcedureItem key={detail.id} data={ detail } index={ number }/>\n              })\n            }\n          </DetailProcedureList>\n        }\n      </div>\n     </Fragment>\n   )\n }\n\n export { Content }\n","//Import Components\nimport React, { Fragment, useState, useEffect } from 'react'\nimport { SideBar } from '../sidebar/SideBar'\nimport { Content } from '../content/Content'\n\n//CSS Import Sections\nimport \"./dashboard.css\"\nimport { Messages } from '../../Messages/Messages'\n\nfunction Dashboard({ logged, disconect, userInfo }) {\n\n  const [seeDetails, setSeeDetails] = useState(userInfo.id)\n  const [message , setMessage] = useState({text:\" \"})\n\n  const getDetails = (procedureID)=>{\n    console.log(\"Valor de procedureID\",procedureID);\n    setSeeDetails(procedureID)\n  }\n\n  useEffect(() => {\n    let isSubscribed = true;\n    let showHideMessage = document.querySelector('.notify')\n    if(showHideMessage){\n      if(showHideMessage.classList.contains('show')){\n        showHideMessage.classList.remove('show')\n        showHideMessage.classList.remove()\n      }else{\n        showHideMessage.classList.add('show')\n      }\n      showHideMessage.classList.add('show')\n    }\n\n    return () => (isSubscribed = false)\n  }, [message.text])\n\n  console.log(\"valor de userInfo en dash\",userInfo);\n  return (\n    <Fragment>\n      <div className=\"wrapper__dashboard\">\n        <Messages message={ message} />\n        <SideBar\n          logged={logged}\n          disconect={ disconect }\n          getDetails={ getDetails }\n          userInfo={ userInfo }\n          setMessage={ setMessage}\n        />\n        <Content procedureID={ seeDetails } setMessage={ setMessage}/>\n      </div>\n    </Fragment>\n  )\n}\n\nexport { Dashboard }\n","import React, { Fragment, useRef,useEffect } from 'react'\n\nfunction OTPInputGenerator({qty, validateChange, OTPKey, inputOTP, disabled}) {\n\n  //Crear cantidad de imputs según props\n  const arrInputs = [];\n  for (let index = 0; index < qty; index++) {\n    arrInputs.push(index)\n  }\n\n  return (\n    <Fragment>\n      {\n        <input type=\"number\" name=\"OPTKEY\" onChange={ validateChange } value={OTPKey} ref={inputOTP} readOnly={ disabled }/>\n        /* arrInputs.map((e)=>(\n          <input type=\"number\" key={e} name=\"\" onChange={ e=>setOTPKey([...OTPKey,e.target.value]) } value={OTPKey[e]}/>\n        )) */\n      }\n    </Fragment>\n  )\n}\n\nexport { OTPInputGenerator }\n","import React, { Fragment, useState, useRef, useEffect } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLock } from '@fortawesome/free-solid-svg-icons'\nimport sha256 from 'crypto-js/sha256'\n\n//Components Import\nimport { OTPInputGenerator } from '../OTPGenerator/OTPInputGenerator'\nimport { Messages } from '../../Messages/Messages'\n\n//CSS Import\nimport \"./otp.css\"\n\nfunction OTP({ validationStatus, characters, setMessage }) {\n\n  const [OTPKey, setOTPKey] = useState(\" \")\n  const [disabled, setDisabled] = useState(false)\n  const [countAttempts, setCountAttempts] = useState(1)\n\n  const inputOTP = useRef(null);\n\n  useEffect(()=>{\n    inputOTP.current.focus();\n  },[])\n\n  const validateChange = (e)=>{\n\n    const OTPValue = e.target.value\n\n    setOTPKey(OTPValue)\n    setMessage({\n      text: \"\",\n      type: \"error\",\n      position: \"right\"\n    })\n\n    if(OTPValue.length === characters){\n      try {\n        //Extraer y desencriptar el código de acceso\n        const authEncrypt = localStorage.getItem(\"authEncrypt\")\n        const CryptoJS = require(\"crypto-js\");\n        const bytes  = CryptoJS.AES.decrypt(authEncrypt.toString(), OTPValue);\n        const decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n\n        if(Number(OTPValue) === decryptedData){\n          localStorage.setItem(\"logged\",\"yes\")\n          validationStatus('ok')\n        }\n\n      } catch {\n\n        //Validar cantidad de intentos de ingreso y lanzar notificación\n        setCountAttempts(countAttempts+1)\n\n        if(countAttempts >= 3){\n          setOTPKey(\" \")\n          setDisabled(true)\n          validationStatus(\"moreAttempts\")\n          setMessage({\n            text: \"Que mal... Intenta de nuevo!!! 🤥 \",\n            type: \"error\",\n            position: \"right\"\n          })\n        }else{\n          setMessage({\n            text: \"Codigo Errado!!!\",\n            type: \"error\",\n            position: \"right\"\n          })\n          setOTPKey(\" \")\n        }\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      {/* <Messages message= { error }/> */}\n      <div className=\"wrapper__login__otp--inputs\">\n        <div className=\"wrapper__login__otp--input\">\n          <label htmlFor=\"\">\n            <FontAwesomeIcon icon={ faLock} />\n          </label>\n          <OTPInputGenerator qty={ characters } validateChange={ validateChange } OTPKey={ OTPKey } inputOTP={ inputOTP } disabled={ disabled }/>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport { OTP }\n","import React, { Fragment, useState, useEffect } from 'react'\nimport { Avatar } from '../../avatar/Avatar'\nimport { Dashboard } from '../../dashboard/main/Dashboard'\nimport { Messages } from '../../Messages/Messages'\nimport { OTP } from '../../OTP/main/OTP'\n\n//CSS Import\nimport \"./loginOTP.css\"\n\nfunction LoginOTP({ characters, userInfo , logged, setLogged, message, setMessage}) {\n\n  const [title, setTitle] = useState(\"El código fue enviado a su correo electrónico! 🚀\")\n\n  const {id, name} = userInfo\n\n  const validationStatus = (status)=>{\n    if(status === 'ok'){\n      const saveInfoUser = {id,name}\n      localStorage.setItem(\"userInfo\",JSON.stringify(saveInfoUser))\n      setLogged(true)\n    }else if(status==='moreAttempts'){\n      setTitle(\"Serás redireccionado para intentarlo de nuevo.\")\n      setTimeout(()=>{\n        window.location.reload()\n      },3000)\n    }\n  }\n\n  return (\n    <Fragment>\n      {\n        (logged)\n        ? <Dashboard userInfo={ userInfo } logged={ logged } setLogged = { setLogged } message={ message } setMessage={ setMessage }/>\n        :\n        <div className=\"wrapper__login__otp\">\n          <div className=\"wrapper__login__otp--ribbons\">\n            <span className=\"wrapper__login__otp--ribbons-item\"></span>\n            <span className=\"wrapper__login__otp--ribbons-item\"></span>\n            <span className=\"wrapper__login__otp--ribbons-item\"></span>\n            <span className=\"wrapper__login__otp--ribbons-item\"></span>\n            <span className=\"wrapper__login__otp--ribbons-item\"></span>\n          </div>\n          <div className=\"wrapper__login__otp--content\">\n            <Avatar width=\"100px\" height=\"100px\" logged = { logged }/>\n            <p>{ title }</p>\n            <Messages message={ message }/>\n            <OTP validationStatus={ validationStatus } characters={ characters } setMessage={ setMessage }/>\n          </div>\n        </div>\n      }\n    </Fragment>\n  )\n}\n\nexport { LoginOTP }\n","import React, { Fragment, useEffect, useState } from 'react'\n\n//Libraries\nimport emailjs from 'emailjs-com';\nimport sha256 from 'crypto-js/sha256';\n\n//Components Import\nimport { Avatar } from '../../avatar/Avatar'\nimport { Messages } from '../../Messages/Messages'\nimport { LoginForm } from '.././loginForm/LoginForm'\nimport { LoginOTP } from '.././loginOTP/LoginOTP'\n\n//CSS Import\nimport \"./login.css\"\n\nfunction Login({ logged, setLogged, disconect}) {\n\n  const users = [\n    {id: 1, name: \"Camilo Taborda\", email: \"ckey08@gmail.com\", image:\"\", genere:\"masculine\", status: \"block\"},\n    {id: 2, name: \"Lina Pineda\", email: \"marcelita-621@hotmail.com\", image:\"\", genere:\"female\", status: \"active\"},\n    {id: 3, name: \"ParkSite\", email: \"parknerco@gmail.com\", image:\"\", genere:\"masculine\", status: \"active\"},\n  ]\n\n  const [ userExist, setUserExist ] = useState({id:\" \", name:\" \", email:\" \", status: \" \", authCode: \" \"})\n  const [message, setMessage] = useState({text:\"\",type:\"error\",position:\"right\"})\n  const [disable, setDisable] = useState(false)\n\n  const characteresLength = 4; //Cantidad de caracteres que lleva el código de autorización\n\n  //Generar código random\n  const generateOTPCode = (number) =>{\n    // return Math.floor(Math.random() * Math.pow(10,number));\n    return Math.floor(Math.pow(10, number-1) + Math.random() * (Math.pow(10, number) - Math.pow(10, number-1) - 1));\n  }\n\n  useEffect(() => {\n    let isSubscribed = true;\n    let showHideMessage = document.querySelector('.notify')\n    if(showHideMessage){\n      if(showHideMessage.classList.contains('show')){\n        showHideMessage.classList.remove('show')\n        showHideMessage.classList.remove()\n      }else{\n        showHideMessage.classList.add('show')\n      }\n      showHideMessage.classList.add('show')\n    }\n\n    console.log(\"valor de showHideMessage\",showHideMessage);\n    console.log(\"valor de message\",message);\n    return () => (isSubscribed = false)\n  }, [message.text])\n\n  const generateForm = (userInfo) =>{\n    console.log(\"userInfo\",userInfo);\n\n    //Asignar emoji segun el genero del usuario\n    let emojiType = \"\"\n    if(userInfo.genere === \"female\"){\n      emojiType = '🕵🏼‍♀️ '\n    }else{\n      emojiType = '🕵🏼‍♂️ '\n    }\n\n    let form = document.createElement(\"form\");\n\n    let name = document.createElement(\"input\");\n    name.setAttribute('type',\"text\");\n    name.setAttribute('name',\"name\");\n    name.setAttribute('value',userInfo.name);\n\n    let appName = document.createElement(\"input\");\n    appName.setAttribute('type',\"text\");\n    appName.setAttribute('name',\"appName\");\n    appName.setAttribute('value',\"Consultango®\");\n\n    let email = document.createElement(\"input\");\n    email.setAttribute('type',\"email\");\n    email.setAttribute('name',\"email\");\n    email.setAttribute('value',userInfo.email);\n\n    let authCode = document.createElement(\"input\");\n    authCode.setAttribute('type',\"text\");\n    authCode.setAttribute('name',\"OTPKey\");\n    authCode.setAttribute('value',userInfo.authCode);\n\n    let emoji = document.createElement(\"input\");\n    emoji.setAttribute('type',\"text\");\n    emoji.setAttribute('name',\"emoji\");\n    emoji.setAttribute('value',emojiType);\n\n    form.appendChild(name);\n    form.appendChild(email);\n    form.appendChild(authCode);\n    form.appendChild(appName);\n    form.appendChild(emoji);\n\n    //Realizar envío del mensaje con el código OTP\n    emailjs.sendForm('service_jtxky4h', 'template_5ki1qvn', form, 'user_BapTsJqJ4slOEVBlqmvZc')\n    .then((result) => {\n      if(result.status===200){\n        console.log(\"SUCCESS!\", result.status, result.text);\n        setUserExist({\n          id: userInfo.id,\n          name: userInfo.name,\n          email: userInfo.email,\n          status: \"ok\",\n          authCode: authCode\n        })\n      }\n    }, (error) => {\n        console.log(error.text);\n    });\n    /* setTimeout(()=>{\n      setUserExist({\n        id: userInfo.id,\n        name: userInfo.name,\n        email: userInfo.email,\n        status: \"ok\",\n        authCode: authCode\n      })\n    },2000) */\n  }\n\n  //Función para validar existencia del usuario\n  const validateUser = (details) => {\n    users.filter(async (user) => {\n      if(user.email === details.email){\n\n        //Generar código aleatorio según la cantidad de caracteres mínimos\n        const authCode = await generateOTPCode(characteresLength)\n        // console.log(\"authCode\",authCode);\n\n        //Encriptar y almacenar el código generado\n        // let authEncrypt = sha256(authCode.toString())\n        const CryptoJS = require(\"crypto-js\");\n        let authEncrypt = CryptoJS.AES.encrypt(authCode.toString(), authCode.toString()).toString();\n        localStorage.setItem(\"authEncrypt\",authEncrypt)\n\n        await generateForm({...user,authCode})\n        setMessage({\n          text: \"Un momento por favor...!\",\n          type: \"success\",\n          position: \"left\"\n        });\n        setDisable(true)\n      }else{\n        setMessage({\n          text: \"El usuario no existe o se encuentra bloqueado!\",\n          type: \"error\",\n          position: \"left\"\n        });\n        setDisable(false)\n      }\n    })\n  }\n\n  return (\n    <Fragment>\n      {(userExist.status === 'ok')\n      ?\n        <LoginOTP\n          characters={ characteresLength }\n          userInfo={ userExist }\n          logged={ logged }\n          setLogged={ setLogged }\n          message= { message }\n          setMessage={ setMessage }\n          disconect={ disconect }\n        />\n      :\n        <div className=\"wrapper__login\">\n          <div className=\"wrapper__login--ribbons\">\n            <span className=\"wrapper__login--ribbons-item\"></span>\n            <span className=\"wrapper__login--ribbons-item\"></span>\n            <span className=\"wrapper__login--ribbons-item\"></span>\n            <span className=\"wrapper__login--ribbons-item\"></span>\n            <span className=\"wrapper__login--ribbons-item\"></span>\n          </div>\n          <div className=\"wrapper__login--content\">\n            <Avatar width=\"100px\" height=\"100px\" logged = { logged }/>\n            <Messages message={ message } />\n            <LoginForm\n              validateUser = { validateUser }\n              message={ message }\n              setMessage={ setMessage }\n              disable={ disable }\n              setDisable={ setDisable }\n            />\n          </div>\n        </div>\n      }\n    </Fragment>\n  )\n}\n\nexport { Login }\n","import React, { useState, useEffect } from \"react\";\nimport { Login } from \"./components/login/main/Login\";\nimport { Dashboard } from \"./components/dashboard/main/Dashboard\";\n\nfunction App() {\n\n  const [logged, setLogged] = useState(false)\n  const [user, setUser] = useState(\" \")\n\n  useEffect(() => {\n    let isSubscribed = true;\n    if(localStorage.getItem(\"logged\") === \"yes\"){\n      const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n      if(userInfo){\n        setUser(userInfo)\n      }else{\n        setLogged(false)\n      }\n      setLogged(true)\n    }else{\n      localStorage.clear();\n      setLogged(false)\n    }\n    console.log(\"cambió el estado\");\n    return () => (isSubscribed = false)\n  },[logged])\n\n  const logout = () =>{\n    console.log(\"di click para hacer logout\");\n    setLogged(false)\n    localStorage.removeItem(\"logged\")\n    localStorage.removeItem(\"authCode\")\n  }\n\n  return (\n    <div className=\"App\">\n      {(logged)\n      ? <Dashboard userInfo= { user } disconect = { logout } logged={ logged }/>\n      : <Login logged={ logged } setLogged = { setLogged } disconect = { logout }/>}\n    </div>\n  );\n}\n\nexport { App };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}